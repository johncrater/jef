package jef.pathfinding.threats;

import jef.core.Player;

public class ThreatAssessment implements Comparable<ThreatAssessment>
{
	private double threatLevel;
	private Player player;

	public ThreatAssessment(Player player, double threatLevel)
	{
		super();
		this.player = player;
		this.threatLevel = threatLevel;
	}

	/**
	 * @return The threat level. This number is comparable only to other numbers
	 *         generated by the same assessor of the threat on the same turn. Higher
	 *         numbers always indicate a greater threat even if numbers are negative.
	 */
	public double getThreatLevel()
	{
		return this.threatLevel;
	}

	public Player getPlayer()
	{
		return this.player;
	}

	@Override
	public int compareTo(ThreatAssessment o)
	{
		return  -1 * Double.compare(threatLevel, o.threatLevel);
	}

	@Override
	public String toString()
	{
		return this.player + " threatLevel=" + this.threatLevel;
	}

}
